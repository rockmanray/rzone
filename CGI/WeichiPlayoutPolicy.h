#ifndef WEICHIPLAYOUTPOLICY_H
#define WEICHIPLAYOUTPOLICY_H

enum WeichiPlayoutPolicy {
	POLICY_UNKNOWN,

	// rule-based playout policy
	POLICY_KILL_SUICIDE,
	POLICY_REPLY_SAVE_1LIB,
	POLICY_REPLY_KILL_2LIB,
	POLICY_REPLY_SAVE_2LIB,
	POLICY_REPLY_DEFENSE_APPROACH_LIB,
	POLICY_REPLY_NAKADE,
	POLICY_FIGHT_KO,
	POLICY_REPLY_GOOD_PATTERN,
	POLICY_RANDOM,
	POLICY_CACHE,
	POLICY_CACHE_CREATE,
	POLICY_PASS,
	POLICY_ABORT,

	// probability playout policy
	POLICY_REPLY,
	POLICY_REPLY_CONTIGUOUS_2,
	POLICY_REPLY_CONTIGUOUS_3,
	POLICY_REPLY_CONTIGUOUS_4,
	POLICY_REPLY_KILL_1LIB,
	POLICY_REPLY_KILL_1LIB_SNAPBACK,
	POLICY_REPLY_SAVE_1LIB_BY_CAPTURE,
	POLICY_REPLY_SAVE_1LIB_BY_CAPTURE_SNAPBACK,
	POLICY_REPLY_SAVE_1LIB_BY_EXTEND_LIB_1,
	POLICY_REPLY_SAVE_1LIB_BY_EXTEND_LIB_2,
	POLICY_REPLY_SAVE_1LIB_BY_EXTEND_LIB_2_LADDER,
	POLICY_REPLY_SAVE_1LIB_BY_EXTEND_LIB_3UP,
	POLICY_REPLY_SAVE_1LIB_BY_CAPTURE_EXTEND_NBR,
	POLICY_REPLY_SAVE_1LIB_EYE_SHAPE_BY_CAPTURE_EXTEND_NBR,
	POLICY_REPLY_KILL_2LIB_BY_ATARI,
	POLICY_REPLY_KILL_2LIB_BY_ATARI_DEAD,
	POLICY_REPLY_KILL_2LIB_BY_COLSE_DOOR,
	POLICY_REPLY_SAVE_2LIB_BY_CAPTURE,
	POLICY_REPLY_SAVE_2LIB_BY_EXTEND,
	POLICY_REPLY_SAVE_2LIB_BY_JUMP,
	POLICY_REPLY_2345LIB_SEMEAI,
	POLICY_REPLY_2345LIB_SEMEAI_CONNECT,
	POLICY_REPLY_CA_SEMEAI,
	POLICY_REPLY_MAKE_TRUE_EYE,
	POLICY_REPLY_MAKE_POTENTIAL_TRUE_EYE,
	POLICY_REPLY_MAKE_FALSE_EYE,
	POLICY_REPLY_FIX_TRUE_EYE,
	POLICY_REPLY_FIX_POTENTIAL_TRUE_EYE,
	POLICY_REPLY_FIX_FALSE_EYE,
	POLICY_REPLY_DESTROY_MAKE_TRUE_EYE,
	POLICY_REPLY_DESTROY_MAKE_POTENTIAL_TRUE_EYE,
	POLICY_REPLY_DESTROY_MAKE_FALSE_EYE,
	POLICY_REPLY_DESTROY_FIX_TRUE_EYE,
	POLICY_REPLY_DESTROY_FIX_POTENTIAL_TRUE_EYE,
	POLICY_REPLY_DESTROY_FIX_FALSE_EYE,

    POLICY_SIZE	// total size, add new element before this one
};

const string sPlayoutPolicy[POLICY_SIZE] = {
	"POLICY_UNKNOWN",
	"POLICY_KILL_SUICIDE",
	"POLICY_REPLY_SAVE_1LIB",
	"POLICY_REPLY_KILL_2LIB",
	"POLICY_REPLY_SAVE_2LIB",
	"POLICY_REPLY_DEFENSE_APPROACH_LIB",
	"POLICY_REPLY_NAKADE",
	"POLICY_FIGHT_KO",
	"POLICY_REPLY_GOOD_PATTERN",
	"POLICY_RANDOM",
	"POLICY_CACHE",
	"POLICY_CACHE_CREATE",
	"POLICY_PASS",
	"POLICY_ABORT",
	"POLICY_REPLY",
	"POLICY_REPLY_CONTIGUOUS_2",
	"POLICY_REPLY_CONTIGUOUS_3",
	"POLICY_REPLY_CONTIGUOUS_4",
	"POLICY_REPLY_KILL_1LIB",
	"POLICY_REPLY_KILL_1LIB_SNAPBACK",
	"POLICY_REPLY_SAVE_1LIB_BY_CAPTURE",
	"POLICY_REPLY_SAVE_1LIB_BY_CAPTURE_SNAPBACK",
	"POLICY_REPLY_SAVE_1LIB_BY_EXTEND_LIB_1",
	"POLICY_REPLY_SAVE_1LIB_BY_EXTEND_LIB_2",
	"POLICY_REPLY_SAVE_1LIB_BY_EXTEND_LIB_2_LADDER",
	"POLICY_REPLY_SAVE_1LIB_BY_EXTEND_LIB_3UP",
	"POLICY_REPLY_SAVE_1LIB_BY_CAPTURE_EXTEND_NBR",
	"POLICY_REPLY_SAVE_1LIB_EYE_SHAPE_BY_CAPTURE_EXTEND_NBR",
	"POLICY_REPLY_KILL_2LIB_BY_ATARI",
	"POLICY_REPLY_KILL_2LIB_BY_ATARI_DEAD",
	"POLICY_REPLY_KILL_2LIB_BY_COLSE_DOOR",
	"POLICY_REPLY_SAVE_2LIB_BY_CAPTURE",
	"POLICY_REPLY_SAVE_2LIB_BY_EXTEND",
	"POLICY_REPLY_SAVE_2LIB_BY_JUMP",
	"POLICY_REPLY_2345LIB_SEMEAI",
	"POLICY_REPLY_2345LIB_SEMEAI_CONNECT",
	"POLICY_REPLY_CA_SEMEAI",
	"POLICY_REPLY_MAKE_TRUE_EYE",
	"POLICY_REPLY_MAKE_POTENTIAL_TRUE_EYE",
	"POLICY_REPLY_MAKE_FALSE_EYE",
	"POLICY_REPLY_FIX_TRUE_EYE",
	"POLICY_REPLY_FIX_POTENTIAL_TRUE_EYE",
	"POLICY_REPLY_FIX_FALSE_EYE",
	"POLICY_REPLY_DESTROY_MAKE_TRUE_EYE",
	"POLICY_REPLY_DESTROY_MAKE_POTENTIAL_TRUE_EYE",
	"POLICY_REPLY_DESTROY_MAKE_FALSE_EYE",
	"POLICY_REPLY_DESTROY_FIX_TRUE_EYE",
	"POLICY_REPLY_DESTROY_FIX_POTENTIAL_TRUE_EYE",
	"POLICY_REPLY_DESTROY_FIX_FALSE_EYE",
};

inline string getWeichiPlayoutPolicyString( WeichiPlayoutPolicy policy ) { return sPlayoutPolicy[policy]; }


#endif